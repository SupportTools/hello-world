name: Docker Build and Push

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
  schedule:
    - cron: '0 0 * * *' # This will run every day at midnight UTC

jobs:
  Test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Install static analysis tools
        run: |
          go install golang.org/x/lint/golint@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Install dependency management tools
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          go install github.com/psampaz/go-mod-outdated@latest
        
      - name: Go static analysis
        run: |
          golint ./...
          staticcheck ./...
          go vet ./...
  
      - name: Dependency management
        run: |
          go mod vendor
          go mod verify
          go mod tidy

      - name: Security scanning
        run: |
          gosec ./...

  Build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: Test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Docker build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            supporttools/hello-world:v${{ github.run_number }}
            supporttools/hello-world:latest
          cache-from: type=registry,ref=supporttools/hello-world:latest
          cache-to: type=inline
          build-args: |
            VERSION=v${{ github.run_number }}
            GIT_COMMIT=${{ github.sha }}
            BUILD_DATE=$(date -u '+%Y-%m-%dT%H:%M:%SZ')
          
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.1.1
        
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: supporttools/hello-world:v${{ github.run_number }}
          artifact-name: sbom.spdx.json
          upload-artifact: true
          
      - name: Sign the container image
        if: github.ref == 'refs/heads/main'
        run: |
          cosign sign --key env://COSIGN_PRIVATE_KEY supporttools/hello-world:v${{ github.run_number }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

  Publish:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: Build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install gettext
        run: |
          sudo apt-get update && sudo apt-get install -y gettext        
      
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Helm Lint
        run: helm lint charts/hello-world/

      - name: Package Helm chart
        run: |
          export CHART_VERSION="v${{ github.run_number }}"
          export APP_VERSION="v${{ github.run_number }}"
          export IMAGE_TAG="v${{ github.run_number }}"
          echo "CHART_VERSION=${CHART_VERSION}"
          echo "APP_VERSION=${APP_VERSION}"
          echo "IMAGE_TAG=${IMAGE_TAG}"
          envsubst < charts/hello-world/Chart.yaml.template > charts/hello-world/Chart.yaml
          envsubst < charts/hello-world/values.yaml.template > charts/hello-world/values.yaml
          mkdir -p helm/repo
          helm package charts/hello-world --destination helm/repo

      - name: Checkout helm-chart repository
        uses: actions/checkout@v4
        with:
          repository: SupportTools/helm-chart
          path: helm-chart
          token: ${{ secrets.BOT_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.email "github-action@users.noreply.github.com"
          git config --global user.name "GitHub Action"

      - name: Update Helm repository
        run: |
          cp helm/repo/hello-world-*.tgz helm-chart/
          cd helm-chart
          helm repo index . --url https://charts.support.tools/
          git add .
          git commit -m "Update Helm chart for hello-world v${{ github.run_number }}"
          git push
          
      - name: Workflow Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "* **Version**: v${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "* **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "* **Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "* **Docker Images**: " >> $GITHUB_STEP_SUMMARY
          echo "  * supporttools/hello-world:v${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "  * supporttools/hello-world:latest" >> $GITHUB_STEP_SUMMARY
          echo "* **Helm Chart**: hello-world-v${{ github.run_number }}.tgz" >> $GITHUB_STEP_SUMMARY
          echo "* **Helm Repo**: https://charts.support.tools/" >> $GITHUB_STEP_SUMMARY
